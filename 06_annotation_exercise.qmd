---
title: "Chapter 6 Annotation"
execute:
  warning: false
  message: false
---

```{r}
#| message: false
# libraries for this chapter
library(tidyverse)
library(Seurat)
library(data.table)
library(celldex)
library(SingleR)
library(ExperimentHub)
library(cellpypes)
library(dittoSeq)
```

# Load RData

Load the RData which contains all files from the previous chapter.

```{r}
load("data/intermediate_data/chapter5.RData")
```

# 1. Exploring known cell type markers

Some typical cell type markers in PBMC.

-   CD14+ monocytes: CD14, LYZ

-   Conventional dendritic cells: FCER1A, CST3

-   B cells: CD79A, MS4A1

-   T cells: CD3D

-   CD4+ T cells: CD3D, IL7R, CCR7

-   CD8+ T cells: CD3D, CD8A

-   NK cells: GNLY, NKG7

The `FeaturePlot` makes it easy to visualize a handful of genes using the gene IDs stored in the Seurat object. We can easily explore the expression of known gene markers on top of our UMAPs. Let's go through and determine the identities of the clusters. To access the normalized expression levels of all genes, we can use the normalized counts stored in the `RNA` assay slot.

```{r}
DefaultAssay(integrate.filtered.rna) <- "RNA"
```

-   CD14+ monocytes: CD14, LYZ

```{r}
FeaturePlot(integrate.filtered.rna, 
            reduction = "umap", 
            features = c("CD14", "LYZ"), 
            order = TRUE,
            min.cutoff = 'q10', 
            label = TRUE)
```

-   B cells: CD79A, MS4A1

```{r}
FeaturePlot(integrate.filtered.rna, 
            reduction = "umap", 
            features = c("CD79A", "MS4A1"), 
            order = TRUE,
            min.cutoff = 'q10', 
            label = TRUE)
```

-   NK cells: GNLY, NKG7

```{r}
FeaturePlot(integrate.filtered.rna, 
            reduction = "umap", 
            features = c("GNLY", "NKG7"), 
            order = TRUE,
            min.cutoff = 'q10', 
            label = TRUE)
```

-   T cells: CD3D

```{r}
FeaturePlot(integrate.filtered.rna, 
            reduction = "umap", 
            features = c("CD3D"), 
            order = TRUE,
            min.cutoff = 'q10', 
            label = TRUE)
```

-   CD8+ T cells: CD3D, CD8A

```{r}
FeaturePlot(integrate.filtered.rna, 
            reduction = "umap", 
            features = c("CD3D", "CD8A"), 
            order = TRUE,
            min.cutoff = 'q10', 
            label = TRUE)
```

-   CD4+ T cells: CD3D, IL7R, CCR7
-   Combine Feature plot and Violin plot

```{r}
FeaturePlot(integrate.filtered.rna, 
            reduction = "umap", 
            features = c("CD3D", "IL7R", "CCR7"), 
            order = TRUE,
            min.cutoff = 'q10', 
            label = TRUE)
```

```{r}
Seurat::VlnPlot(integrate.filtered.rna,
                features = c("CD3D", "IL7R", "CCR7"),
                ncol = 2)
```

# 2. Automatic annotation

So far, we already look at the marker genes based on knowledge (manual annotation) and between clusters by differential expression analysis. The manual annotation usually takes time. Another way to annotate the clusters is through the automatic annotation.

## 2.1 Reference-based

We look at the publicly available dataset with annotation and build a reference set based on its information. Then we can "transfer" the annotation from the reference to the query. Seurat provides the interface to connect with `Azimuth`.

```{r}
#| warning: false
integrate.filtered.rna <- Azimuth::RunAzimuth(integrate.filtered.rna,
                                              reference = "pbmcref",
                                              verbose = F)
```

We can look at the automatic annotation on UMAP.

```{r}
p1 <- DimPlot(integrate.filtered.rna, reduction = "umap", 
              group.by = "predicted.celltype.l1", 
              label = TRUE, label.size = 3 ,repel = TRUE) + 
  NoLegend()

p2 <- DimPlot(integrate.filtered.rna, reduction = "umap", 
              group.by = "integrated_snn_res.0.4", 
              label = TRUE, label.size = 3 ,repel = TRUE) + 
  NoLegend()

p1|p2
```

## 2.2 Marker-based

The `celldex` contains several curated reference datasets, mostly assembled from bulk RNA-seq or microarray data of sorted cell types. Here, we will use a reference constructed from Blueprint and ENCODE data (Martens and Stunnenberg 2013; The ENCODE Project Consortium 2012).

```{r}
# get reference
# ref_encode <- BlueprintEncodeData()
ref_encode <- readRDS("data/blueprint_encode_ref.rds")

# perform annotation
annot_encode <- SingleR(test = as.SingleCellExperiment(integrate.filtered.rna), 
                        ref = ref_encode, 
                        labels = ref_encode$label.main)

# get labels into Seurat object
integrate.filtered.rna$annot_encode <- annot_encode$labels

# Visualizae
DimPlot(integrate.filtered.rna, 
        group.by = "annot_encode", 
        label = T, reduction = "umap")
```
