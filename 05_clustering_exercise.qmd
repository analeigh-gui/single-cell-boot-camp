---
title: "Chapter 5 Clustering"
execute:
  warning: false
  message: false
---

```{r}
#| message: false
# libraries for this chapter
library(tidyverse)
library(Seurat)
library(data.table)
library(celldex)
library(SingleR)
library(ExperimentHub)
```

# Load RData

Load the RData which contains all files from the previous chapter.

```{r}
load("data/intermediate_data/chapter4.RData")
```

# 1. Clustering

```{r}
# check the default assay is set to "integrated"
DefaultAssay(integrate.filtered.rna) <- "integrated"

# Determine the neighbor graph
integrate.filtered.rna <- FindNeighbors(object = integrate.filtered.rna, dims = 1:20)
                                
# Determine the clusters for various resolutions                                
integrate.filtered.rna <- FindClusters(object = integrate.filtered.rna,
                                       resolution = c(0.2, 0.4, 0.6,  0.8, 1, 1.2, 1.4),
                                       verbose = F)
```

The `meta.data` has a separate column for each of the different resolution calculated. We can look at how many clusters in each resolution.

```{r}
integrate.filtered.rna@meta.data %>% 
  dplyr::select(contains("integrat")) %>% 
  map_int(~ unique(.x) %>% length)
```

# 2. Which resolution?

We start with the resolution of 0.4. We assign the identity of the clusters using the `group.by` argument to specify that we want to look at the clusters calculating with resolution = 0.4.

```{r}
# UMAP visualization
DimPlot(integrate.filtered.rna,
        reduction = "umap",
        label = TRUE,
        label.size = 6,
        group.by = "integrated_snn_res.0.4")
```

::: callout-note
## @QUESTION1

Change to other resolution values. How do the clusters change?

::: callout-note
## Tip

Change the `group.by`.

```{r}
# UMAP visualization
DimPlot(integrate.filtered.rna,
        reduction = "umap",
        label = TRUE,
        label.size = 6,
        group.by = "integrated_snn_res.1.4")
```
:::
:::

The higher the resolution, the more cluster. We are going to use resolution 0.4 for the downstream anlysis

```{r}
Idents(integrate.filtered.rna) <- integrate.filtered.rna$integrated_snn_res.0.4
```

We can also split the UMAP by sample.

```{r}
# UMAP of cells in each cluster by sample
DimPlot(integrate.filtered.rna, 
        label = TRUE, 
        split.by = "Sample_Name",
        group.by = "integrated_snn_res.0.4")  + NoLegend()
```
