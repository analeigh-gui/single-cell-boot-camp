---
title: "Chapter 4 Integration"
execute:
  warning: false
  message: false
---

```{r}
#| message: false
# libraries for this chapter
library(tidyverse)
library(Seurat)
library(data.table)
library(celldex)
library(SingleR)
library(ExperimentHub)
```

# Load RData

Load the RData which contains all files from previous chapter.

```{r}
load("data/intermediate_data/chapter3_pca.RData")
```

# 1. To integrate or not to integrate?

```{r}
DimPlot(filtered.rna, group.by = "Sample_Name")
```

::: callout-important
# @QUESTION1

Judging by the UMAP, do the two samples need to be integrated?

::: callout-note
## Tip

Are the cells separated by treatment?
:::
:::

# 2. Perform integration

First, we split the object by sample and then select the variable features. The features should be selected in each dataset.

```{r}
# split the dataset into a list of two seurat objects (treated and naive)
split.filtered.rna <- SplitObject(filtered.rna, split.by = "Sample_Name")

# normalize and identify variable features for each dataset independently
split.filtered.rna <- lapply(X = split.filtered.rna, FUN = function(x) {
    x <- NormalizeData(x, verbose = F)
    x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 2000, verbose = F)
})

# Select the most variable features to use for integration
integ.features <- SelectIntegrationFeatures(object.list = split.filtered.rna, 
                                            nfeatures = 2000) 
```

Next, we perform the integration across samples. This step can take a while to run.

```{r}
anchors <- FindIntegrationAnchors(object.list = split.filtered.rna,
                                  anchor.features = integ.features,
                                  verbose = F)
```

Finally, we can integrate across samples. By default, `normalization.method` is set to `LogNormalize`.

```{r}
integrate.filtered.rna <- IntegrateData(anchorset = anchors, verbose = F)
```

::: callout-note
# @QUESTION2

Where is the integrated value stored?

::: callout-note
## Tip

![](pics/Screenshot%202023-09-17%20at%2021.21.50.png)

Use the Assay `integrated` **ONLY** for clustering and visualisation.
:::
:::

# 3. Run the standard workflow to UMAP

```{r}
# switch the assay to "integrated"
Seurat::DefaultAssay(integrate.filtered.rna) <- "integrated"

# No need to re-run FindVariableFeatures, these were automatically set by calling IntegrateData.

# scale data
integrate.filtered.rna <- ScaleData(integrate.filtered.rna, verbose = FALSE)

# run PCA
integrate.filtered.rna <- RunPCA(integrate.filtered.rna, npcs = 50, verbose = FALSE)

# run UMAP
integrate.filtered.rna <- RunUMAP(integrate.filtered.rna, 
                                  reduction = "pca", 
                                  dims = 1:20,
                                  verbose = F)
```

```{r}
# Plot UMAP                             
DimPlot(integrate.filtered.rna, group.by = "Sample_Name")   
```

We can compare the UMAP before and after integration.

```{r}
p1 <- DimPlot(filtered.rna, group.by = "Sample_Name") + NoLegend()
p2 <- DimPlot(integrate.filtered.rna, group.by = "Sample_Name")  + NoLegend()

p1|p2
```
