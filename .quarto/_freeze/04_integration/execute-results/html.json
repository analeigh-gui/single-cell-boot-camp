{
  "hash": "16795f962a6f7518de89b04fab2fad6a",
  "result": {
    "markdown": "---\ntitle: \"Chapter 4 Integration\"\nexecute:\n  warning: false\n  message: false\n---\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-1_f4eb1fc58084206612577451be7b15ce'}\n\n```{.r .cell-code}\n# libraries for this chapter\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\n```\n:::\n\n\n# Load RData\n\nLoad the RData which contains all files from previous chapter.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-2_d292a6b1a12c21c02389c830ad451787'}\n\n```{.r .cell-code}\nload(\"data/intermediate_data/chapter3.RData\")\n```\n:::\n\n\n# 1. To integrate or not to integrate?\n\nThe goal of integration is to find corresponding cell states across conditions (or experiments). We want to identify cell types which are present in all samples/conditions/modalities within our dataset. We expect to observe a representation of cells from samples/conditions/modalities in every cluster.\n\nWe first look at how cells cluster **without integration** to determine whether integration is necessary. Integration is considered if cells cluster separately on samples/conditions/modalities, etc.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-3_8e027df76f81fb2f5edd59b38e02174e'}\n\n```{.r .cell-code}\n# Run the standard workflow for visualization\nfiltered.rna <- RunUMAP(filtered.rna, dims = 1:15)\n\nDimPlot(filtered.rna, group.by = \"Sample_Name\")\n```\n\n::: {.cell-output-display}\n![](04_integration_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n::: callout-important\n## Question\n\nJudging by the UMAP, do the two samples need to be integrated?\n:::\n\n::: {.callout-tip collapse=\"T\"}\n## Answer\n\nThe same cell types from the two samples are not aligned. One may consider to perform integration.\n:::\n\n# 2. Perform integration\n\nFirst, we select the variable features. The features should be selected in each dataset.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-4_bb60157bb7fb8e79a5220462b007f3e4'}\n\n```{.r .cell-code}\n# split the dataset into a list of two seurat objects (treated and naive)\nsplit.filtered.rna <- SplitObject(filtered.rna, split.by = \"Sample_Name\")\n\n# normalize and identify variable features for each dataset independently\nsplit.filtered.rna <- lapply(X = split.filtered.rna, FUN = function(x) {\n    x <- NormalizeData(x)\n    x <- FindVariableFeatures(x, selection.method = \"vst\", nfeatures = 2000)\n})\n\n# Select the most variable features to use for integration\ninteg.features <- SelectIntegrationFeatures(object.list = split.filtered.rna, \n                                            nfeatures = 2000) \n```\n:::\n\n\nNext, we perform the integration across samples. This step can take a while to run.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-5_32d69bf017a802398d2aa580c267ebd4'}\n\n```{.r .cell-code}\nanchors <- FindIntegrationAnchors(object.list = split.filtered.rna,\n                                  anchor.features = integ.features)\n```\n:::\n\n\nFinally, we can integrate across samples. By default, `normalization.method` is set to `LogNormalize`.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-6_a21cef78f94fee13ccff051f1a008e6a'}\n\n```{.r .cell-code}\nintegrate.filtered.rna <- IntegrateData(anchorset = anchors)\n```\n:::\n\n\n# 3. UMAP visualization\n\nAfter integration, we look at the integrated data on UMAP. To calculate UMAP, we need to first calculate PCA and select top PCs.\n\nMethods to select top PCs were used a lot more often when the data was normalized with `LogNormalize`.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-7_d1e238f559966071a4b48c4b8af5d7dc'}\n\n```{.r .cell-code}\nintegrate.filtered.rna <- ScaleData(integrate.filtered.rna, verbose = FALSE)\nintegrate.filtered.rna <- RunPCA(integrate.filtered.rna, npcs = 30, verbose = FALSE)\n```\n:::\n\n\nElbow plot can help to select top PCs. The PC number, where the elbow is, is used to calculate UMAP.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-8_5c0ed709ec6bab032990e607fa7e5528'}\n\n```{.r .cell-code}\nElbowPlot(integrate.filtered.rna)\n```\n\n::: {.cell-output-display}\n![](04_integration_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nFor this dataset, we use the first top 10 PCs. For other datasets, one may need to adjust the PCs according to the elbow plot.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-9_8552676f4d9ae956f02489bb0c022b35'}\n\n```{.r .cell-code}\nintegrate.filtered.rna <- RunUMAP(integrate.filtered.rna, \n                                  reduction = \"pca\", \n                                  dims = 1:10)\n\nintegrate.filtered.rna <- FindNeighbors(integrate.filtered.rna, \n                                        reduction = \"pca\", \n                                        dims = 1:10)\n\n\n# Plot UMAP                             \nDimPlot(integrate.filtered.rna, group.by = \"Sample_Name\")   \n```\n\n::: {.cell-output-display}\n![](04_integration_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n## Exercise 1\n\nChange the number of PCs and see how the UMAP changes.\n\nTips: You can change the PC numbers by `dims` argument in `RunUMAP`.\n:::\n\n::: callout-note\n## Exercise 2\n\n`Dimplot` has many arguments to control the plots.\n\n1.  Search `Dimplot` in the \"Help\" tab and read the documentation.\n2.  Change `group.by` to `split.by`. What is the difference?\n:::\n\nWhen we compare the similarity between the naive and treated clusters in the plots with or without integration, it is clear that this dataset benefits from the integration.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-10_c65b1ac4963e161332f11159b1b3610b'}\n\n```{.r .cell-code}\np1 <- DimPlot(filtered.rna, group.by = \"Sample_Name\") + NoLegend()\np2 <- DimPlot(integrate.filtered.rna, group.by = \"Sample_Name\")  + NoLegend()\n\np1|p2\n```\n\n::: {.cell-output-display}\n![](04_integration_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n# 4. Save\n\nSave the files into RData for documentation.\n\n\n::: {.cell hash='04_integration_cache/html/unnamed-chunk-11_1ee02581a3f283e6d7d03dc7656d6f38'}\n\n```{.r .cell-code}\n# save(integrate.filtered.rna, expMat, file = \"data/intermediate_data/chapter4.RData\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}