{"title":"Chapter 5 Clustering","markdown":{"yaml":{"title":"Chapter 5 Clustering","execute":{"warning":false,"message":false}},"headingText":"libraries for this chapter","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\n```\n\n# Load RData\n\nLoad the RData which contains all files from the previous chapter.\n\n```{r}\nload(\"data/intermediate_data/chapter4.RData\")\n```\n\n# 1. Clustering\n\nNow that we have our high quality cells integrated, we want to know the different cell types present within our population of cells.\n\nSeurat uses a graph-based clustering approach, which embeds cells in a graph structure, using a K-nearest neighbor (KNN) graph (by default), with edges drawn between cells with similar gene expression patterns. Then, it attempts to partition this graph into highly interconnected 'quasi-cliques' or 'communities'.\n\nWe will use the `FindClusters` function to perform the graph-based clustering. The `resolution` is an important argument that sets the \"granularity\" of the downstream clustering and will need to be optimized for **every individual experiment**.\n\n::: callout-important\nIncreasing resolution value leads to a greater number of clusters, which is often required for larger datasets.\n:::\n\nThe `FindClusters` function allows us to enter a series of resolutions and will calculate the \"granularity\" of the clustering. This is very helpful for testing which resolution works for moving forward without having to run the function for each resolution.\n\n```{r}\n# Determine the K-nearest neighbor graph\nintegrate.filtered.rna <- FindNeighbors(object = integrate.filtered.rna, dims = 1:10)\n                                \n# Determine the clusters for various resolutions                                \nintegrate.filtered.rna <- FindClusters(object = integrate.filtered.rna,\n                                       resolution = c(0.2, 0.4, 0.6,  0.8, 1, 1.2, 1.4),\n                                       verbose = F)\n```\n\nThe `meta.data` has a separate column for each of the different resolution calculated. We can look at how many clusters in each resolution.\n\n```{r}\nintegrate.filtered.rna@meta.data %>% \n  dplyr::select(contains(\"integrat\")) %>% \n  map_int(~ unique(.x) %>% length)\n```\n\nWe start with the resolution of 0.6. We assign the identity of the clusters using the `Idents` function to specify that we want to look at the clusters calculating with resolution = 0.6.\n\n```{r}\nIdents(object = integrate.filtered.rna) <- \"integrated_snn_res.0.6\"\n\n# UMAP visualization\nDimPlot(integrate.filtered.rna,\n        reduction = \"umap\",\n        label = TRUE,\n        label.size = 6)\n```\n\n::: callout-note\n## Exercise\n\nChange to other resolution values. How do the clusters change?\n:::\n\n# 2. Distribution of cells per cluster\n\nThe number of clusters are sensitive to the resolution. The demo dataset has PBMC and we expect each cluster contains cells from both samples.\n\n```{r}\nFetchData(integrate.filtered.rna, \n          vars = c(\"ident\", \"Sample_Name\")) %>%\n  dplyr::count(ident, Sample_Name) %>%\n  tidyr::spread(ident, n)\n```\n\nWe can split the UMAP by sample.\n\n```{r}\n# UMAP of cells in each cluster by sample\nDimPlot(integrate.filtered.rna, \n        label = TRUE, \n        split.by = \"Sample_Name\")  + NoLegend()\n```\n\n# 3. Exploring known cell type markers\n\nWe can explore some known cell type markers to get an idea about the identity of clusters.\n\nSome typical cell type markers:\n\n-   CD14+ monocytes: CD14, LYZ\n\n-   Conventional dendritic cells: FCER1A, CST3\n\n-   B cells: CD79A, MS4A1\n\n-   T cells: CD3D\n\n-   CD4+ T cells: CD3D, IL7R, CCR7\n\n-   CD8+ T cells: CD3D, CD8A\n\n-   NK cells: GNLY, NKG7\n\n-   Macrophages: MARCO, ITGAM, ADGRE1\n\nThe `FeaturePlot` makes it easy to visualize a handful of genes using the gene IDs stored in the Seurat object. We can easily explore the expression of known gene markers on top of our UMAPs. Let's go through and determine the identities of the clusters. To access the normalized expression levels of all genes, we can use the normalized counts stored in the `RNA` assay slot.\n\n```{r}\nDefaultAssay(integrate.filtered.rna) <- \"RNA\"\n```\n\n-   CD14+ monocytes: CD14, LYZ\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD14\", \"LYZ\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   B cells: CD79A, MS4A1\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD79A\", \"MS4A1\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   NK cells: GNLY, NKG7\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"GNLY\", \"NKG7\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   T cells: CD3D\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD3D\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   CD4+ T cells: CD3D, IL7R, CCR7\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD3D\", \"IL7R\", \"CCR7\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   CD8+ T cells: CD3D, CD8A\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD3D\", \"CD8A\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n# 4. Save\n\nSave the files into RData for documentation.\n\n```{r}\n# save(integrate.filtered.rna, expMat, file = \"data/intermediate_data/chapter5.RData\")\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n# libraries for this chapter\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\n```\n\n# Load RData\n\nLoad the RData which contains all files from the previous chapter.\n\n```{r}\nload(\"data/intermediate_data/chapter4.RData\")\n```\n\n# 1. Clustering\n\nNow that we have our high quality cells integrated, we want to know the different cell types present within our population of cells.\n\nSeurat uses a graph-based clustering approach, which embeds cells in a graph structure, using a K-nearest neighbor (KNN) graph (by default), with edges drawn between cells with similar gene expression patterns. Then, it attempts to partition this graph into highly interconnected 'quasi-cliques' or 'communities'.\n\nWe will use the `FindClusters` function to perform the graph-based clustering. The `resolution` is an important argument that sets the \"granularity\" of the downstream clustering and will need to be optimized for **every individual experiment**.\n\n::: callout-important\nIncreasing resolution value leads to a greater number of clusters, which is often required for larger datasets.\n:::\n\nThe `FindClusters` function allows us to enter a series of resolutions and will calculate the \"granularity\" of the clustering. This is very helpful for testing which resolution works for moving forward without having to run the function for each resolution.\n\n```{r}\n# Determine the K-nearest neighbor graph\nintegrate.filtered.rna <- FindNeighbors(object = integrate.filtered.rna, dims = 1:10)\n                                \n# Determine the clusters for various resolutions                                \nintegrate.filtered.rna <- FindClusters(object = integrate.filtered.rna,\n                                       resolution = c(0.2, 0.4, 0.6,  0.8, 1, 1.2, 1.4),\n                                       verbose = F)\n```\n\nThe `meta.data` has a separate column for each of the different resolution calculated. We can look at how many clusters in each resolution.\n\n```{r}\nintegrate.filtered.rna@meta.data %>% \n  dplyr::select(contains(\"integrat\")) %>% \n  map_int(~ unique(.x) %>% length)\n```\n\nWe start with the resolution of 0.6. We assign the identity of the clusters using the `Idents` function to specify that we want to look at the clusters calculating with resolution = 0.6.\n\n```{r}\nIdents(object = integrate.filtered.rna) <- \"integrated_snn_res.0.6\"\n\n# UMAP visualization\nDimPlot(integrate.filtered.rna,\n        reduction = \"umap\",\n        label = TRUE,\n        label.size = 6)\n```\n\n::: callout-note\n## Exercise\n\nChange to other resolution values. How do the clusters change?\n:::\n\n# 2. Distribution of cells per cluster\n\nThe number of clusters are sensitive to the resolution. The demo dataset has PBMC and we expect each cluster contains cells from both samples.\n\n```{r}\nFetchData(integrate.filtered.rna, \n          vars = c(\"ident\", \"Sample_Name\")) %>%\n  dplyr::count(ident, Sample_Name) %>%\n  tidyr::spread(ident, n)\n```\n\nWe can split the UMAP by sample.\n\n```{r}\n# UMAP of cells in each cluster by sample\nDimPlot(integrate.filtered.rna, \n        label = TRUE, \n        split.by = \"Sample_Name\")  + NoLegend()\n```\n\n# 3. Exploring known cell type markers\n\nWe can explore some known cell type markers to get an idea about the identity of clusters.\n\nSome typical cell type markers:\n\n-   CD14+ monocytes: CD14, LYZ\n\n-   Conventional dendritic cells: FCER1A, CST3\n\n-   B cells: CD79A, MS4A1\n\n-   T cells: CD3D\n\n-   CD4+ T cells: CD3D, IL7R, CCR7\n\n-   CD8+ T cells: CD3D, CD8A\n\n-   NK cells: GNLY, NKG7\n\n-   Macrophages: MARCO, ITGAM, ADGRE1\n\nThe `FeaturePlot` makes it easy to visualize a handful of genes using the gene IDs stored in the Seurat object. We can easily explore the expression of known gene markers on top of our UMAPs. Let's go through and determine the identities of the clusters. To access the normalized expression levels of all genes, we can use the normalized counts stored in the `RNA` assay slot.\n\n```{r}\nDefaultAssay(integrate.filtered.rna) <- \"RNA\"\n```\n\n-   CD14+ monocytes: CD14, LYZ\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD14\", \"LYZ\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   B cells: CD79A, MS4A1\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD79A\", \"MS4A1\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   NK cells: GNLY, NKG7\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"GNLY\", \"NKG7\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   T cells: CD3D\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD3D\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   CD4+ T cells: CD3D, IL7R, CCR7\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD3D\", \"IL7R\", \"CCR7\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n-   CD8+ T cells: CD3D, CD8A\n\n```{r}\nFeaturePlot(integrate.filtered.rna, \n            reduction = \"umap\", \n            features = c(\"CD3D\", \"CD8A\"), \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n# 4. Save\n\nSave the files into RData for documentation.\n\n```{r}\n# save(integrate.filtered.rna, expMat, file = \"data/intermediate_data/chapter5.RData\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"tidy":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"05_clustering.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.340","theme":"cosmo","title":"Chapter 5 Clustering"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}