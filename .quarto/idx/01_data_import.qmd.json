{"title":"Chapter 1 Data Import","markdown":{"yaml":{"title":"Chapter 1 Data Import","execute":{"warning":false,"message":false}},"headingText":"libraries for this chapter","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\n```\n\n# Demo data\n\nThe demo data is generated from freshly isolated human PBMCs. The PBMCs were grown for 24 hours in the presence of CD3/CD28 stimulation (\"treated\") and compared to PBMCs grown for 24 hours in regular media (\"naive\"). Cells were then labeled with a 20plex AbSeq panel consisting of lineage markers and T-cell activation markers, as well as unique Sample Tags from the BD Rhapsody^™^ Human Single Cell Multiplexing Kit (resting PBMC: ST1; treated PBMC: ST2). The cells were mixed at a 1:1 ratio and processed using the BD Rhapsody^™^ Single-Cell Analysis System. Sequencing libraries for RNA and AbSeq antibodies were generated using the BD Rhapsody WTA Amplification kit.\n\n::: callout-note\nPlease review the **setup** chapter to ensure that R packages are installed and data is downloaded.\n:::\n\n# 1. Data import\n\nThe expression matrix stores the UMI counts of a feature (gene or protein). Depending on the single cell platform, common format of expression matrix include CSV, MEX (Market Exchange) or H5AD.\n\nRhapsody single cell platform outputs expression matrix in two formats: MEX and H5AD.\n\nWe import MEX using the function from Seurat, `Read10x`. We assign a name to the created object, `expMat` (**exp**ression **Mat**rix).\n\n::: callout-note\nThe expression matrix in Rhapsody v1 pipeline is in CSV format. If you run Rhapsody v2.0 pipeline, the expression matrix is available in MEX format.\n:::\n\n```{r}\nexpMat <- Read10X(\"data/raw_data/WTA-AB-SMK-v2-0_DBEC_MolsPerCell_MEX/\",\n                  gene.column = 2,\n                  cell.column = 1,\n                  unique.features = TRUE)\n```\n\nClick on the `expMat` on the right.\n\n![](pics/1-1-expMat.png)\n\nA window will pop up and you should be able to see the structure of `expMat`.\n\n![](pics/1-2-expMat.png)\n\n`expMat` contains two matrices: **Gene Expression** and **Antibody Capture**. You may recall that the demo dataset has two assays: WTA, whole transcriptome analysis, to capture **Gene Expression**; and AbSeq for **Antibody Capture**.\n\nWe will first focus on **Gene Expression**.\n\nTake a look at the first 5 rows X first 5 columns of **Gene Expression** matrix. It is organized as **feature X cell**. The **row names** are **gene names**. The **column names** are **cell labels**.\n\n```{r}\nexpMat$`Gene Expression`[1:5, 1:5]\n```\n\n::: callout-important\n## Question\n\nWhat are the dots \".\" in the matrix?\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\nThe \".\" corresponds to 0.\n\nscRNA-seq usually contains many zeros. The zeros can come from:\n\n-   Stochastic gene expression.\n\n-   Limitation of single cell technology: On average, 5 - 8% of mRNA transcripts can be captured by the technology.\n:::\n\n# 2. Create a Seurat object to store Gene Expression\n\nLet's create a Seurat object to store Gene Expression and assign \"rna\" as the object name.\n\n```{r}\nrna <- Seurat::CreateSeuratObject(counts = expMat$`Gene Expression`, \n                                min.cells = 1, \n                                min.features = 100, \n                                assay = \"RNA\")\n```\n\n`min.cells` Specify the minimum number of cells that needs to be detected per feature. Setting this argument will filter out zero or lowly expressed features.\n\n`min.features` Specify the minimum number of features that need to be detected per cell. Setting this argument will filter out cell labels with low feature counts.\n\n`assay` Specify the name of the created assay. By default, it is \"RNA\".\n\n::: callout-note\n`CreateSeuratObject` has many arguments in the function. These arguments allow users to control the behavior of the function. One can look at the Help tab to see the arguments and their default settings.\n\n![](pics/1-3-helpDesk.png)\n:::\n\n::: callout-note\n## Function notation with `::`\n\nHere, we define the function together with its associated package. We do that by the syntax `package::function`. Of course, you can also call `library(package)`, and only type the function name. Since we use many different packages in this course, it can be confusing which function comes from which package. Therefore, we associate the package with the called function.\n:::\n\nWhen creating a Seurat object, Seurat automatically creates some metadata for each cell. This information is stored in the `meta.data` slot.\n\n```{r}\nrna@meta.data %>% head\n```\n\n`meta.data` stores information related to each cell. We will add more information into the `meta.data` later. For now, it contains three columns:\n\n-   `orig.ident` Sample identity or sample name. By default, it is \"SeuratProject\".\n\n-   `nCount_RNA` UMI counts per gene per cell.\n\n-   `nFeature_RNA` Genes counts per cell.\n\n# 3. Add sample multiplexing kit into `meta.data`\n\nThe demo dataset has **Sample Multiplexing Kit (SMK)** to pool two samples on one cartridge.\n\nTo demultiplex the samples, one can use the table \"Demo-WTA-AbSeq-SMK_Sample_Tag_Calls.csv\".\n\n```{r}\nsmk <- fread(file = \"data/raw_data/WTA-AB-SMK-v2-0_Sample_Tag_Calls.csv\", \n                     sep = \",\", \n                     header=TRUE) %>% \n  data.frame(row.names = 1)\n\n```\n\nLet's look at the first 5 rows of the created object `smk`.\n\n```{r}\nsmk[1:5, ]\n```\n\n`smk` is a matrix with two columns. The row names are the cell labels.\n\n-   `Sample_Tag`: Which tag the cell belongs to.\n\n-   `Sample_Name`: Which sample the cell belongs to.\n\nWe can add the cell assignment into the `meta.data` of the Seurat object by `AddMetaData`.\n\n```{r}\nrna <- AddMetaData(object = rna, metadata = smk)\n```\n\n```{r}\nrna@meta.data %>% head()\n```\n\nNow we know which cell belongs to which sample.\n\n# 4. Remove Multiplet and Undetermined\n\nThe **Multiplet** are cell labels with more than one SMK tags. They could be Multiplets from one microwell containing two cells, or single cells with high ambient SMK noise.\n\nThe **Undetermined** are cell labels without sufficient SMK tag reads. They could be noisy cell labels, or single cells without SMK tag reads.\n\n```{r fig.height=15, fig.width=20}\nrna@meta.data %>% \n  group_by(Sample_Name) %>% \n  tally() %>% \n  mutate(pct = n/sum(n)) %>% \n  ggplot(aes(x=Sample_Name, y=n, fill= Sample_Name)) + \n  geom_bar(stat = \"identity\") +\n  geom_text(aes(y = n,\n                label = paste0(n, \"\\n\", scales::percent(pct)),\n                vjust= -0.5, size = 2.5), show.legend = FALSE) + \n  theme_classic()\n```\n\nMultiplet and Undetermined are removed from the downstream analysis by `subset`.\n\n```{r}\nrna <- subset(rna, subset = Sample_Name %in% c(\"Multiplet\", \"Undetermined\"), invert = T)\n```\n\n# 5. Save\n\nSave the files into RData for documentation.\n\n```{r}\n# save.image(\"data/intermediate_data/chapter1.RData\")\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n# libraries for this chapter\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\n```\n\n# Demo data\n\nThe demo data is generated from freshly isolated human PBMCs. The PBMCs were grown for 24 hours in the presence of CD3/CD28 stimulation (\"treated\") and compared to PBMCs grown for 24 hours in regular media (\"naive\"). Cells were then labeled with a 20plex AbSeq panel consisting of lineage markers and T-cell activation markers, as well as unique Sample Tags from the BD Rhapsody^™^ Human Single Cell Multiplexing Kit (resting PBMC: ST1; treated PBMC: ST2). The cells were mixed at a 1:1 ratio and processed using the BD Rhapsody^™^ Single-Cell Analysis System. Sequencing libraries for RNA and AbSeq antibodies were generated using the BD Rhapsody WTA Amplification kit.\n\n::: callout-note\nPlease review the **setup** chapter to ensure that R packages are installed and data is downloaded.\n:::\n\n# 1. Data import\n\nThe expression matrix stores the UMI counts of a feature (gene or protein). Depending on the single cell platform, common format of expression matrix include CSV, MEX (Market Exchange) or H5AD.\n\nRhapsody single cell platform outputs expression matrix in two formats: MEX and H5AD.\n\nWe import MEX using the function from Seurat, `Read10x`. We assign a name to the created object, `expMat` (**exp**ression **Mat**rix).\n\n::: callout-note\nThe expression matrix in Rhapsody v1 pipeline is in CSV format. If you run Rhapsody v2.0 pipeline, the expression matrix is available in MEX format.\n:::\n\n```{r}\nexpMat <- Read10X(\"data/raw_data/WTA-AB-SMK-v2-0_DBEC_MolsPerCell_MEX/\",\n                  gene.column = 2,\n                  cell.column = 1,\n                  unique.features = TRUE)\n```\n\nClick on the `expMat` on the right.\n\n![](pics/1-1-expMat.png)\n\nA window will pop up and you should be able to see the structure of `expMat`.\n\n![](pics/1-2-expMat.png)\n\n`expMat` contains two matrices: **Gene Expression** and **Antibody Capture**. You may recall that the demo dataset has two assays: WTA, whole transcriptome analysis, to capture **Gene Expression**; and AbSeq for **Antibody Capture**.\n\nWe will first focus on **Gene Expression**.\n\nTake a look at the first 5 rows X first 5 columns of **Gene Expression** matrix. It is organized as **feature X cell**. The **row names** are **gene names**. The **column names** are **cell labels**.\n\n```{r}\nexpMat$`Gene Expression`[1:5, 1:5]\n```\n\n::: callout-important\n## Question\n\nWhat are the dots \".\" in the matrix?\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\nThe \".\" corresponds to 0.\n\nscRNA-seq usually contains many zeros. The zeros can come from:\n\n-   Stochastic gene expression.\n\n-   Limitation of single cell technology: On average, 5 - 8% of mRNA transcripts can be captured by the technology.\n:::\n\n# 2. Create a Seurat object to store Gene Expression\n\nLet's create a Seurat object to store Gene Expression and assign \"rna\" as the object name.\n\n```{r}\nrna <- Seurat::CreateSeuratObject(counts = expMat$`Gene Expression`, \n                                min.cells = 1, \n                                min.features = 100, \n                                assay = \"RNA\")\n```\n\n`min.cells` Specify the minimum number of cells that needs to be detected per feature. Setting this argument will filter out zero or lowly expressed features.\n\n`min.features` Specify the minimum number of features that need to be detected per cell. Setting this argument will filter out cell labels with low feature counts.\n\n`assay` Specify the name of the created assay. By default, it is \"RNA\".\n\n::: callout-note\n`CreateSeuratObject` has many arguments in the function. These arguments allow users to control the behavior of the function. One can look at the Help tab to see the arguments and their default settings.\n\n![](pics/1-3-helpDesk.png)\n:::\n\n::: callout-note\n## Function notation with `::`\n\nHere, we define the function together with its associated package. We do that by the syntax `package::function`. Of course, you can also call `library(package)`, and only type the function name. Since we use many different packages in this course, it can be confusing which function comes from which package. Therefore, we associate the package with the called function.\n:::\n\nWhen creating a Seurat object, Seurat automatically creates some metadata for each cell. This information is stored in the `meta.data` slot.\n\n```{r}\nrna@meta.data %>% head\n```\n\n`meta.data` stores information related to each cell. We will add more information into the `meta.data` later. For now, it contains three columns:\n\n-   `orig.ident` Sample identity or sample name. By default, it is \"SeuratProject\".\n\n-   `nCount_RNA` UMI counts per gene per cell.\n\n-   `nFeature_RNA` Genes counts per cell.\n\n# 3. Add sample multiplexing kit into `meta.data`\n\nThe demo dataset has **Sample Multiplexing Kit (SMK)** to pool two samples on one cartridge.\n\nTo demultiplex the samples, one can use the table \"Demo-WTA-AbSeq-SMK_Sample_Tag_Calls.csv\".\n\n```{r}\nsmk <- fread(file = \"data/raw_data/WTA-AB-SMK-v2-0_Sample_Tag_Calls.csv\", \n                     sep = \",\", \n                     header=TRUE) %>% \n  data.frame(row.names = 1)\n\n```\n\nLet's look at the first 5 rows of the created object `smk`.\n\n```{r}\nsmk[1:5, ]\n```\n\n`smk` is a matrix with two columns. The row names are the cell labels.\n\n-   `Sample_Tag`: Which tag the cell belongs to.\n\n-   `Sample_Name`: Which sample the cell belongs to.\n\nWe can add the cell assignment into the `meta.data` of the Seurat object by `AddMetaData`.\n\n```{r}\nrna <- AddMetaData(object = rna, metadata = smk)\n```\n\n```{r}\nrna@meta.data %>% head()\n```\n\nNow we know which cell belongs to which sample.\n\n# 4. Remove Multiplet and Undetermined\n\nThe **Multiplet** are cell labels with more than one SMK tags. They could be Multiplets from one microwell containing two cells, or single cells with high ambient SMK noise.\n\nThe **Undetermined** are cell labels without sufficient SMK tag reads. They could be noisy cell labels, or single cells without SMK tag reads.\n\n```{r fig.height=15, fig.width=20}\nrna@meta.data %>% \n  group_by(Sample_Name) %>% \n  tally() %>% \n  mutate(pct = n/sum(n)) %>% \n  ggplot(aes(x=Sample_Name, y=n, fill= Sample_Name)) + \n  geom_bar(stat = \"identity\") +\n  geom_text(aes(y = n,\n                label = paste0(n, \"\\n\", scales::percent(pct)),\n                vjust= -0.5, size = 2.5), show.legend = FALSE) + \n  theme_classic()\n```\n\nMultiplet and Undetermined are removed from the downstream analysis by `subset`.\n\n```{r}\nrna <- subset(rna, subset = Sample_Name %in% c(\"Multiplet\", \"Undetermined\"), invert = T)\n```\n\n# 5. Save\n\nSave the files into RData for documentation.\n\n```{r}\n# save.image(\"data/intermediate_data/chapter1.RData\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"tidy":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"01_data_import.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.340","theme":"cosmo","title":"Chapter 1 Data Import"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}