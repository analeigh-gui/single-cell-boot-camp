{"title":"Chapter 8 Enrichment Analysis","markdown":{"yaml":{"title":"Chapter 8 Enrichment Analysis","execute":{"warning":false,"message":false}},"headingText":"libraries for this chapter","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\nlibrary(org.Hs.eg.db)\nlibrary(clusterProfiler)\nlibrary(AnnotationDbi)\nlibrary(enrichplot)\nlibrary(biomaRt)\n```\n\n# Load RData\n\nLoad the RData which contain all files from previous chapter.\n\n```{r}\nload(\"data/intermediate_data/chapter7.RData\")\n```\n\nOftentimes, enrichment analysis takes in the differentially expressed genes and looks at which gene ontology (GO) terms are enriched.\n\nGO terms defines concepts/classes used to describe gene function and relationships between these concepts. `clusterProfiler` is an R package implementing many methods to analyze and visualize functional profiles from a group of features. It classifies functions along three aspects.\n\nMF: Molecular Function: molecular activities of gene products\n\nCC: Cellular Component: where gene products are active\n\nBP: Biological Process: pathways and larger processes made up of the activities of multiple gene products\n\nThis chapter uses the differentially expressed genes in CD4+ T cells from last chapter as an example.\n\n# 1. Get Entrez ID\n\n`clusterProfiler` prefers the input of Entrez ID. We use `biomaRt` package to convert the gene symbol into Entrez ID.\n\n::: callout-note\n`biomaRt` is handy for getting information about a group of features. You can use it to get gene symbols, genomic coordinates, transcripts, etc. You can explore what data is stored in `biomaRt` with `listAttributes`.\n:::\n\nThe differentially expressed genes in CD4+ T cells between naïve and activated PBMCs are stored in `cd4t`. The gene symbol in this list can be converted into Entrez ID by `biomaRt`.\n\nFirstly, connect to the Ensembl database and specify we want to retrieve information from the dataset of Homo Sapien.\n\n```{r}\nmart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")\n```\n\n`biomart` BioMart database connect to. Here, we want to connect to `ensembl` database.\n\n`dataset` Dataset to use. Here specify `hsapiens_gene_ensembl`.\n\nNext, we can give a list of gene symbols and retrieve the Entrez ID through `getBM`.\n\n```{r}\nresults <- getBM(attributes = c(\"entrezgene_id\", \"external_gene_name\"),\n                 filters = \"external_gene_name\", values = cd4t$gene,\n                 mart = mart)\n```\n\n`attributes` Attributes to retrieve. We want to have the gene symbols and Entrez ID in the results.\n\n`filters` Which filter to use to filter the dataset.\n\n`values` A list of features as a query.\n\n`mart` Object of class Mart, created with the `useMart` function.\n\nA table of two columns is created and stored in `results`.\n\n```{r}\nhead(results)\n```\n\nNot every gene has the Entrez ID. We keep only genes that have a matched Entrez ID.\n\n```{r}\ncd4t <- left_join(cd4t, results, by = c(\"gene\" = \"external_gene_name\")) %>% \n  filter(!is.na(entrezgene_id))\n```\n\n# 2. GO over-representation analysis\n\nOver Representation Analysis (ORA) is a widely used approach to determine whether known biological functions or processes are over-represented (= enriched) in an experimentally-derived gene list, e.g. a list of differentially expressed genes (DEGs).\n\nWe use the `enrichGO` to get the enriched GO terms in the list of features.\n\n```{r}\ncd4t.sig <- dplyr::filter(cd4t, p_adj.loc < 0.05, logFC > 1) %>% \n  arrange(p_adj.loc)\n\n# get the enriched GO terms\nego <- enrichGO(gene = cd4t.sig$entrezgene_id,\n                keyType = \"ENTREZID\",\n                OrgDb = org.Hs.eg.db,\n                ont = \"BP\",\n                pAdjustMethod = \"BH\",\n                pvalueCutoff = 0.01,\n                qvalueCutoff = 0.05,\n                readable = TRUE)\n```\n\n`gene` A list of Entrez gene id.\n\n`keyType` The keytype of input gene.\n\n`OrgDb` The database with detailed information about the species.\n\n`org.Hs.eg.db` Specify the database of Homo Sapien.\n\n`ont` One of \"BP\" (biological process), \"MF\" (molecular function), and \"CC\" (cellular component) subontologies, or \"ALL\" for all three.\n\n`pAdjustMethod` Multiple testing method for p-value.\n\n`pvalueCutoff` Adjusted pvalue cutoff on enrichment tests to report.\n\n`qvalueCutoff` Tge qvalue cutoff on enrichment tests to report as significant.\n\n`readable` Whether mapping gene ID to gene Name.\n\nLet's convert the `ego` object into a data frame and visualize the results in a bar plot.\n\n```{r}\nego.table <- as.data.frame(ego)\n```\n\n`GeneRatio` The gene counts from the input list found in the gene set of a GO term / gene counts of input list.\n\n`BgRatio` The gene counts of a geneset / size of all of the unique genes in the collection of genesets.\n\n```{r}\nbarplot(ego, showCategory = 18)\n```\n\n# 3. GSEA\n\nAll genes can be used as input of GSEA (Gene set enrichment analysis). We first rank the genes based on `stat`.\n\n```{r}\n# order genes based on stat\ncd4t <- cd4t[order(-cd4t$stat), ]\n\ngene_list <- cd4t$stat\nnames(gene_list) <- cd4t$entrezgene_id\n```\n\nWe use `gseGO` to perform GSEA and convert the results into a dataframe.\n\n```{r}\n# perform GSEA\ngse <- gseGO(gene_list,\n             keyType = \"ENTREZID\",\n             ont = \"BP\",\n             OrgDb = \"org.Hs.eg.db\")\n\n# convert the results into a dataframe\ngse.table <- as.data.frame(gse) %>% \n  mutate(geneSetID = 1:dim(.)[1])\n```\n\n`enrichmentScore` The enrichment score (ES) represents the degree to which a set S is over-represented at the top or bottom of the ranked list L.\n\nWe can look at the enrichment of some GO terms in GSEA plot.\n\n```{r}\ngseaplot2(gse, geneSetID = c(158, 163))\n```\n\nWe have significant enriched term in the unregulated genes. Along the x axis is the ranked genes. Each of the vertical line is one of those genes that are found in this gene set. Along the running line, you can see a lot of genes running together and it falls out when the gene becomes more sparse in the list.\n\n# 4. Save\n\nSave the files into RData for documentation.\n\n```{r}\n# save(integrate.filtered.rna, expMat, cd4t, ego.table, gse.table, file = \"data/intermediate_data/chapter8.RData\")\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n# libraries for this chapter\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(data.table)\nlibrary(celldex)\nlibrary(SingleR)\nlibrary(ExperimentHub)\nlibrary(org.Hs.eg.db)\nlibrary(clusterProfiler)\nlibrary(AnnotationDbi)\nlibrary(enrichplot)\nlibrary(biomaRt)\n```\n\n# Load RData\n\nLoad the RData which contain all files from previous chapter.\n\n```{r}\nload(\"data/intermediate_data/chapter7.RData\")\n```\n\nOftentimes, enrichment analysis takes in the differentially expressed genes and looks at which gene ontology (GO) terms are enriched.\n\nGO terms defines concepts/classes used to describe gene function and relationships between these concepts. `clusterProfiler` is an R package implementing many methods to analyze and visualize functional profiles from a group of features. It classifies functions along three aspects.\n\nMF: Molecular Function: molecular activities of gene products\n\nCC: Cellular Component: where gene products are active\n\nBP: Biological Process: pathways and larger processes made up of the activities of multiple gene products\n\nThis chapter uses the differentially expressed genes in CD4+ T cells from last chapter as an example.\n\n# 1. Get Entrez ID\n\n`clusterProfiler` prefers the input of Entrez ID. We use `biomaRt` package to convert the gene symbol into Entrez ID.\n\n::: callout-note\n`biomaRt` is handy for getting information about a group of features. You can use it to get gene symbols, genomic coordinates, transcripts, etc. You can explore what data is stored in `biomaRt` with `listAttributes`.\n:::\n\nThe differentially expressed genes in CD4+ T cells between naïve and activated PBMCs are stored in `cd4t`. The gene symbol in this list can be converted into Entrez ID by `biomaRt`.\n\nFirstly, connect to the Ensembl database and specify we want to retrieve information from the dataset of Homo Sapien.\n\n```{r}\nmart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")\n```\n\n`biomart` BioMart database connect to. Here, we want to connect to `ensembl` database.\n\n`dataset` Dataset to use. Here specify `hsapiens_gene_ensembl`.\n\nNext, we can give a list of gene symbols and retrieve the Entrez ID through `getBM`.\n\n```{r}\nresults <- getBM(attributes = c(\"entrezgene_id\", \"external_gene_name\"),\n                 filters = \"external_gene_name\", values = cd4t$gene,\n                 mart = mart)\n```\n\n`attributes` Attributes to retrieve. We want to have the gene symbols and Entrez ID in the results.\n\n`filters` Which filter to use to filter the dataset.\n\n`values` A list of features as a query.\n\n`mart` Object of class Mart, created with the `useMart` function.\n\nA table of two columns is created and stored in `results`.\n\n```{r}\nhead(results)\n```\n\nNot every gene has the Entrez ID. We keep only genes that have a matched Entrez ID.\n\n```{r}\ncd4t <- left_join(cd4t, results, by = c(\"gene\" = \"external_gene_name\")) %>% \n  filter(!is.na(entrezgene_id))\n```\n\n# 2. GO over-representation analysis\n\nOver Representation Analysis (ORA) is a widely used approach to determine whether known biological functions or processes are over-represented (= enriched) in an experimentally-derived gene list, e.g. a list of differentially expressed genes (DEGs).\n\nWe use the `enrichGO` to get the enriched GO terms in the list of features.\n\n```{r}\ncd4t.sig <- dplyr::filter(cd4t, p_adj.loc < 0.05, logFC > 1) %>% \n  arrange(p_adj.loc)\n\n# get the enriched GO terms\nego <- enrichGO(gene = cd4t.sig$entrezgene_id,\n                keyType = \"ENTREZID\",\n                OrgDb = org.Hs.eg.db,\n                ont = \"BP\",\n                pAdjustMethod = \"BH\",\n                pvalueCutoff = 0.01,\n                qvalueCutoff = 0.05,\n                readable = TRUE)\n```\n\n`gene` A list of Entrez gene id.\n\n`keyType` The keytype of input gene.\n\n`OrgDb` The database with detailed information about the species.\n\n`org.Hs.eg.db` Specify the database of Homo Sapien.\n\n`ont` One of \"BP\" (biological process), \"MF\" (molecular function), and \"CC\" (cellular component) subontologies, or \"ALL\" for all three.\n\n`pAdjustMethod` Multiple testing method for p-value.\n\n`pvalueCutoff` Adjusted pvalue cutoff on enrichment tests to report.\n\n`qvalueCutoff` Tge qvalue cutoff on enrichment tests to report as significant.\n\n`readable` Whether mapping gene ID to gene Name.\n\nLet's convert the `ego` object into a data frame and visualize the results in a bar plot.\n\n```{r}\nego.table <- as.data.frame(ego)\n```\n\n`GeneRatio` The gene counts from the input list found in the gene set of a GO term / gene counts of input list.\n\n`BgRatio` The gene counts of a geneset / size of all of the unique genes in the collection of genesets.\n\n```{r}\nbarplot(ego, showCategory = 18)\n```\n\n# 3. GSEA\n\nAll genes can be used as input of GSEA (Gene set enrichment analysis). We first rank the genes based on `stat`.\n\n```{r}\n# order genes based on stat\ncd4t <- cd4t[order(-cd4t$stat), ]\n\ngene_list <- cd4t$stat\nnames(gene_list) <- cd4t$entrezgene_id\n```\n\nWe use `gseGO` to perform GSEA and convert the results into a dataframe.\n\n```{r}\n# perform GSEA\ngse <- gseGO(gene_list,\n             keyType = \"ENTREZID\",\n             ont = \"BP\",\n             OrgDb = \"org.Hs.eg.db\")\n\n# convert the results into a dataframe\ngse.table <- as.data.frame(gse) %>% \n  mutate(geneSetID = 1:dim(.)[1])\n```\n\n`enrichmentScore` The enrichment score (ES) represents the degree to which a set S is over-represented at the top or bottom of the ranked list L.\n\nWe can look at the enrichment of some GO terms in GSEA plot.\n\n```{r}\ngseaplot2(gse, geneSetID = c(158, 163))\n```\n\nWe have significant enriched term in the unregulated genes. Along the x axis is the ranked genes. Each of the vertical line is one of those genes that are found in this gene set. Along the running line, you can see a lot of genes running together and it falls out when the gene becomes more sparse in the list.\n\n# 4. Save\n\nSave the files into RData for documentation.\n\n```{r}\n# save(integrate.filtered.rna, expMat, cd4t, ego.table, gse.table, file = \"data/intermediate_data/chapter8.RData\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"tidy":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"08_enrichment_analysis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.340","theme":"cosmo","title":"Chapter 8 Enrichment Analysis"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}