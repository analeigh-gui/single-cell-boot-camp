---
title: "Chapter 7 Differential Expression Analysis"
execute:
  warning: false
  message: false
---

```{r}
# libraries for this chapter
library(tidyverse)
library(Seurat)
library(data.table)
# library(muscat)
```

# Load RData

Load the RData which contains all files from the previous chapter.

```{r}
load("data/intermediate_data/chapter6.RData")
```

# 1. FindMarkers

In the last chapter, we used `FindMarkers` to find the marker genes between two clusters by specifying `ident.1` and `ident.2`.

Changing the `ident.1` and `ident.2` arguments, we can perform differential expression analysis between two groups.

For instance, we want to find genes deferentially expressed between na√Øve and treated PBMC.

```{r}
# assign the sample identity that we want to work on different sample groups
Idents(integrate.filtered.rna) <- "Sample_Name"

# change default assay to "RNA"
DefaultAssay(integrate.filtered.rna) <- "RNA"

# Find genes differentially expressed
treated_naive <- 
  FindMarkers(integrate.filtered.rna, ident.1 = "treated", ident.2 = "naive") %>% 
  rownames_to_column("gene") %>% 
  dplyr::filter(p_val_adj < 0.05)
```

We can compare the gene expression between two groups by specifying `ident.1` and `ident.2`.

```{r}
head(treated_naive)
```

-   `gene` Gene symbol.

-   `p_val` P-value without multiple testing.

-   `avg_log2FC` log2 fold-change of the average expression between the two groups.

We can also find genes deferentially expressed in CD4 T cells between the two samples. We start by subsetting the cells annotated as "CD4 T".

```{r}
# subset CD4 T cells
cd4t <- subset(integrate.filtered.rna, subset = predicted.celltype.l1 == "CD4 T")

# Find genes differentially expressed between activated vs. naive samples in CD4 T cells
treated_naive_cd4t <- 
  FindMarkers(cd4t, ident.1 = "treated", ident.2 = "naive", 
              assay = "RNA", recorrect_umi = FALSE) %>% 
  rownames_to_column("gene") %>% 
  dplyr::filter(p_val_adj < 0.05)
```

# 2. Save

Save the files into RData for documentation.

```{r}
# save.image(file = "data/intermediate_data/chapter7.RData")
```
